#include <bits/stdc++.h> 
using namespace std; 

struct Node { 
	Node* left; 
	Node* right; 
	int data; 
}; 

Node* newNode(int key) 
{ 
	Node* node = new Node(); 
	node->left = node->right = NULL; 
	node->data = key; 
	return node; 
} 

void topView(Node * root)
{
    if(!root)
    {
        return;
    }
    Node* temp=NULL;
    
    std::queue<pair<Node*,int> > q ;
    
    map<int,int> mp;
    q.push({root,0});
    while(!q.empty())
    {
        temp=q.front().first;
        int d=q.front().second;
        q.pop();
        
        if(mp.find(d)==mp.end())
        {
            mp[d]=temp->data;
        }
        if(temp->left)
        {
            q.push({temp->left,d-1});
        }
         
         if(temp->right)
        {
            q.push({temp->right,d+1});
        }
        
    }
    
    for(auto itr:mp)
  {
    cout<<itr.second<<" ";
  }
}

int main() 
{ 
	Node* root = newNode(1); 
	root->left = newNode(2); 
	root->right = newNode(3); 
	root->left->right = newNode(4); 
	root->left->right->right = newNode(5); 
	root->left->right->right->right = newNode(6); 
	cout << "Following are nodes in top view of Binary Tree\n"; 
	topView(root); 
	return 0; 
} 
