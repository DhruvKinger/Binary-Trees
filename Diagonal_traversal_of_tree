#include <bits/stdc++.h> 
using namespace std; 
struct node { 
    int data; 
    struct node *left, *right; 
}; 


 struct node* newNode(int data) 
{ 
    struct node* node = new struct node; 
    node->data = data; 
    node->left = NULL; 
    node->right = NULL; 
     return (node); 
} 
  
  
  void print_diagonal(node* root)
{
    if(!root)
    return;
 std::queue<node*> q ;
 q.push(root);
 q.push(NULL);
 
 while(!q.empty())
 {
    node* x=q.front();
    q.pop();

    if(x==NULL)
  {
    if(q.empty())
    {
        return; 
    }
    cout<<endl; // output nextline 
    
    q.push(NULL); // push delimiter again 
   }   

    else
    {
      while(x!=NULL)
     {
       cout<<x->data<<" ";
        if(x->left)  //if left child is present push into queue 
               
        q.push(x->left);
        
        x=x->right;
     }
    }

  }
 
}


int main() 
{ 
    struct node* root = newNode(1); 
    root->left = newNode(2); 
    root->right = newNode(3); 
    root->left->left = newNode(7); 
    root->left->right = newNode(6); 
    root->right->left = newNode(5); 
    root->right->right = newNode(4); 
    cout << "diagonal traversal of binary tree is \n"; 
    print_diagonal(root); 
    return 0; 
} 
