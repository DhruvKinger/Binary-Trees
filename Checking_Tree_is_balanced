#include <iostream>
#include<bits/stdc++.h>
using namespace std;
struct node{
    int data;
    node* left,*right;
};

struct node* new_node(int data)
{
    node* x=new node;
    x->data=data;
    x->left=x->right=NULL;
    return x;
}

int height(node* node);

bool checkbalance(node *root)
{
    if(root==NULL)
    return 1;

    int l,r;
    l=height(root->left);
    r=height(root->right);

    if(abs(l-r)<=1 && checkbalance(root->left) && checkbalance(root->right))
  {
      return 1;
  }
    
    return 0;
}

int height(node *node)
{
    if(node==NULL)
    return 0;
    
    return 1+max(height(node->left),height(node->right));
}

int main()
{
    node* root = new_node(1); 
    root->left = new_node(2); 
    root->right = new_node(3); 
    root->left->left = new_node(4); 
    root->left->right = new_node(5); 
    if(checkbalance(root)==1)
    {
        std::cout << "Balanced" << std::endl;
    }
    else
    {
        cout<<" Not balanced";
    }
    return 0;
}
