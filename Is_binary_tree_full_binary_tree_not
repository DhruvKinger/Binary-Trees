#include <bits/stdc++.h> 
using namespace std; 
struct node { 
	node* left; 
	node* right; 
	int data; 
}; 

node* newNode(int key) 
{ 
	node* nodex = new node(); 
	nodex->left = nodex->right = NULL; 
	nodex->data = key; 
	return nodex; 
} 

bool isFullTree(node* root)
{
     if(!root)
     {
         return true; // If empty tree 
     }
     
     if(root->left==NULL && root->right==NULL)
     return true; // If leaf node 
     
     if(root->left && root->right)
     {
         return (isFullTree(root->left) && isFullTree(root->right));
     }
     
     return false;
     
}
int main() 
{ 
 struct node *root = newNode(1); 
  root = newNode(10); 
    root->left = newNode(20); 
    root->right = newNode(30); 
  
    root->left->right = newNode(40); 
    root->left->left = newNode(50); 
    root->right->left = newNode(60); 
    root->right->right = newNode(70); 
  
    root->left->left->left = newNode(80); 
    root->left->left->right = newNode(90); 
    root->left->right->left = newNode(80); 
    root->left->right->right = newNode(90); 
    root->right->left->left = newNode(80); 
    root->right->left->right = newNode(90); 
    root->right->right->left = newNode(80); 
    root->right->right->right = newNode(90); 

(isFullTree(root)) ? printf("The Binary Tree is full\n") : printf("The Binary Tree is not full\n"); 
    	return 0; 
} 
