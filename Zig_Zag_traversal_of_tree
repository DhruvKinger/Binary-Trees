#include <bits/stdc++.h> 
using namespace std; 
struct node { 
    int data; 
    struct node *left, *right; 
}; 

void printZig_Zag(node* root)
{
    if(root==NULL)
    return;
    
    stack<node*> s1 ;
    stack<node*> s2;
    
    s1.push(root);
    while(!s1.empty() || !s2.empty())
    {
        while(!s1.empty())
        {
            node *x=s1.top();
            s1.pop();
          cout<<x->data<<" ";
          
          if(x->left)
          s2.push(x->left);
          
          if(x->right)
          s2.push(x->right); //left pushed first because when we will pop stack 2nd right will be popped first
          
          
        }
        
        while(!s2.empty())
        {
        node* y=s2.top();
        s2.pop();
         cout<<y->data<<" ";
        
          if(y->right)
          s1.push(y->right); //right pushed first because when we will pop stack 1 left will be popped first
          
          if(y->left)
          s1.push(y->left);
        
          
          
            
        }
    }
}
 
 struct node* newNode(int data) 
{ 
    struct node* node = new struct node; 
    node->data = data; 
    node->left = NULL; 
    node->right = NULL; 
     return (node); 
} 
  

int main() 
{ 
    struct node* root = newNode(1); 
    root->left = newNode(2); 
    root->right = newNode(3); 
    root->left->left = newNode(7); 
    root->left->right = newNode(6); 
    root->right->left = newNode(5); 
    root->right->right = newNode(4); 
    cout << "Zigzag traversal of binary tree is \n"; 
    printZig_Zag(root); 
  
    return 0; 
} 
