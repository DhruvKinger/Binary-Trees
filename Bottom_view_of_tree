#include <bits/stdc++.h> 
using namespace std; 

struct Node { 
	Node* left; 
	Node* right; 
	int data; 
}; 

Node* newNode(int key) 
{ 
	Node* node = new Node(); 
	node->left = node->right = NULL; 
	node->data = key; 
	return node; 
} 

void bottomView(Node * root)
{
    if(!root)
    return;
    
    Node* temp=NULL;
    std::queue<pair<Node*,int>> q ;
    map<int,int> mp;
    
    q.push({root,0});
    
    while(!q.empty())
    {
        temp=q.front().first;
        int d=q.front().second;
        q.pop();
        
        
        mp[d]=temp->data;
        
        if(temp->left)
        {
            q.push({temp->left,d-1});
        }
        
        if(temp->right)
        {
            q.push({temp->right,d+1});
        }
    }
    for(auto itr:mp)
    {
        cout<<itr.second<<" ";
    }
}


int main() 
{ 
	Node *root = newNode(20); 
    root->left = newNode(8); 
    root->right = newNode(22); 
    root->left->left = newNode(5); 
    root->left->right = newNode(3); 
    root->right->left = newNode(4); 
    root->right->right = newNode(25); 
    root->left->right->left = newNode(10); 
    root->left->right->right = newNode(14);
	cout << "Following are nodes in bottom view of Binary Tree\n"; 
	bottomView(root); 
	return 0; 
}
