#include <bits/stdc++.h>
using namespace std;
struct node{
  int data;
  struct node* left,*right;
  
};
struct node *new_node(int data)
{
    node* create=new node; 
    create->data=data;
    create->left=create->right=NULL;
    return(create);
}

void print(node* root)
{
    if(root==NULL)
    return;
    print(root->left);
    cout<<root->data<<" ";
    print(root->right);

}

void leftview(node * root)
{
    if(!root)
    return;
    
    std::queue<node*> q ;
    q.push(root); // Push root 
    q.push(NULL); // delimiter
    
    while(!q.empty())
    {
        node* x=q.front();
        if(x!=NULL)
        {
            cout<<x->data<<" "; // Prints first node of each level 
			
            while(q.front()!=NULL)
            {
                if(x->left)
                {
                    q.push(x->left);
                }
                if(x->right)
                {
                    q.push(x->right);
                }
                q.pop();
                x=q.front();
            }
            q.push(NULL);
        }
        q.pop();
    }
}

int main()
{    node* a=new_node(1); 
     a->left = new_node(2); 
    a->right = new_node(3); 
    a->left->left  = new_node(4); 
    a->left->right = new_node(5);
    a->right->left= new_node(18); 
	a->right->left->right = new_node(7); 
	cout<<"Tree is:\n";
	print(a);
	cout<<"\nLeft view of tree is:\n";
	leftview(a);
   return 0; 
}
