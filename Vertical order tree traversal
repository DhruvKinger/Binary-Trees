#include <bits/stdc++.h>
using namespace std;
struct Node 
{ 
    int key; 
    Node *left, *right; 
}; 

struct Node* newNode(int key) 
{ 
    struct Node* node = new Node; 
    node->key = key; 
    node->left = node->right = NULL; 
    return node; 
}
void Vertical(Node* root,map<int,vector<int>> &mp,int d)
{
    
    if(!root)
    return;
    
    mp[d].push_back(root->key);
    
    Vertical(root->left,mp,d-1);
    Vertical(root->right,mp,d+1);
}
void printVerticalOrder(Node* root)
{
    if(!root)
    return;
    
    int d=0;
    
    map<int,vector<int>> mp;
    Vertical(root,mp,d);
    
    for(auto it:mp)
    {
        for(int i=0;i<it.second.size();i++)
        
        {
            cout<<it.second[i]<<" ";
        }
        cout<<endl;
    }
    
} 
int main() 
{ 
    Node *root = newNode(1); 
    root->left = newNode(2); 
    root->right = newNode(3); 
    root->left->left = newNode(4); 
    root->left->right = newNode(5); 
    root->right->left = newNode(6); 
    root->right->right = newNode(7); 
    root->right->left->right = newNode(8); 
    root->right->right->right = newNode(9); 
    cout << "Vertical order traversal is\n"; 
    printVerticalOrder(root); 
    return 0; 
}
